#ifndef BLUETOOTH
#define BLUETOOTH
/*	-----------------------------------------------------------------------	 */
/*	frBluetooth.h															 */
/*	Bluetooth接続のクラス													 */
/*	EV３とPC（Tera Term）の通信												 */
/*	-----------------------------------------------------------------------	 */
/*	番号	更新履歴									日付		氏名	 */
/*	-----------------------------------------------------------------------	 */
/*	000000	新規作成									2018/06/29	小西 巧  */
/*	000001	シングルトンのみ対応						2018/07/01	小西 巧	 */
/*	000002	define定義の追加							2018/07/13	小西 巧	 */
/*	-----------------------------------------------------------------------	 */

/*	-----------------------------------------------------------------------	 */
/*	includeファイル															 */
/*	-----------------------------------------------------------------------	 */
//using namespace ev3api;
#include "ev3api.h"
#include "common.h"

/*	-----------------------------------------------------------------------	 */
/*	定数定義																 */
/*	-----------------------------------------------------------------------	 */
#define BLT_DIS_CONNECTED ( 1 )							/*	未接続			 */
#define BLT_CONNECTED  	  ( 2 )							/*	接続済み		 */
#define BLT_ARG_ERROR	  ( 3 )							/*	引数エラー		 */


/*	-----------------------------------------------------------------------	 */
/*	クラス定義																 */
/*	-----------------------------------------------------------------------	 */
class frBluetooth {
public:											/*	パブリック-------------	 */
	
	SINT  Send			( SCHR  );				/*	EV3からPC送信			 */
	SCHR  Receive		( void  );				/*	PCからEV3受信			 */
	SINT  DisConnect	( void  );				/*	Bluetooth切断			 */
	SINT  StringSend	( SCHR* );				/*	EV3からPCに文字列送信	 */
	SINT  Connect		( void  );				/*	EV3とPCのBluetooth接続	 */
	
	static frBluetooth& GetInstance(void);		/*	クラス生成用			 */
	
	
 
private:										/*	プライベート-----------	 */
	frBluetooth();								/*	コンストラクタ			 */
	~frBluetooth();								/*	デストラクタ			 */
	
	/*	シングルトン作成用-------------------------------------------------	 */
	frBluetooth(const frBluetooth &x){ };
	frBluetooth&operator=(const frBluetooth&){return *this;};
	
	FILE *bt;									/*	Bluetooth接続ファイル	 */

};
/*	-----------------------------------------------------------------------	 */
/*				Copyright HAL College of Technology & Design				 */
/*	-----------------------------------------------------------------------	 */
#endif