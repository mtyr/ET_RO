// tag::tracer_def[]
/*	-----------------------------------------------------------------------	 */
/*	dgMotor_Get.cpp														   	 */
/*	角位置情報取得															 */
/*	-----------------------------------------------------------------------	 */
/*	番号	更新履歴								日付		氏名		 */
/*	-----------------------------------------------------------------------	 */
/*	000000	新規作成								2018/07/13	髙岡 諒太	 */
/*	-----------------------------------------------------------------------	 */

/*	-----------------------------------------------------------------------	 */
/*	include	ファイル														 */
/*	-----------------------------------------------------------------------	 */
#include "dgMotor_Get.h"
#include <Motor.h>
#include <stdio.h>								/* 入出力ライブラリ			 */
#include <stdlib.h>								/* 標準ライブラリー			 */
#include <string.h>								/* 文字列操作系				 */
#include"..\frLog\frLog.h"							/* logヘッダー */
/* ------------------------------------------------------------------------- */
/* 関数名	: dgdgMotor_Get::dgMotor_Get									 */
/* 機能名	: 角位置取得：コンストラクタ									 */
/* 機能概要	: 初回インスタンス生成時にコールされます						 */
/* 引数		: void			: なし											 */
/* 戻り値	: void			: なし											 */
/* 作成日	: 2018/07/13			髙岡 諒太		新規作成				 */
/* ------------------------------------------------------------------------- */
dgMotor_Get::dgMotor_Get()
{
	
	/* モータセンサーポート設定 */
	ev3_motor_config( EV3_PORT_B,LARGE_MOTOR);
	/* モータセンサーポート設定 */
	ev3_motor_config( EV3_PORT_C,LARGE_MOTOR);
	int  logindex  = 0;
	char command1[] = { "logon -motor\n" };
	for( logindex = 0; logindex < ( sizeof( command1 ) / sizeof(command1[0] )); logindex ++ ) {
		log.SetLog(command1[logindex]);
	}
}
void dgMotor_Get::dgMortor_OffSet(){
	ev3_motor_reset_counts(EV3_PORT_B);
	ev3_motor_reset_counts(EV3_PORT_C);
}
/* ------------------------------------------------------------------------- */
/* 関数名	: dgMotor_Get::MotorUpdate										 */
/* 機能名	: 角位置取得:角位置情報更新										 */
/* 機能概要	: タイマ関数で定期的に角位置情報を更新する						 */
/* 引数		: void			: なし											 */
/* 戻り値	: void			: なし											 */
/* 作成日	: 2018/07/13		髙岡 諒太		新規作成					 */
/* ------------------------------------------------------------------------- */
void dgMotor_Get::MotorUpdate() {
	/* 右motor情報取得 */
	i_rmotor_info=ev3_motor_get_counts( EV3_PORT_B);
	/* 左motor情報取得 */
	i_lmotor_info=ev3_motor_get_counts( EV3_PORT_C);
}
/* ------------------------------------------------------------------------- */
/* 関数名	: dgMotor_Get::MotorGet											 */
/* 機能名	: 角位置取得:角位置情報取得										 */
/* 機能概要	: 呼ばれた関数に戻り値で角位置情報を渡します					 */
/* 引数		: void			: なし											 */
/* 戻り値	: SINT			: i_motor_info									 */
/* 作成日	: 2018/07/13		髙岡 諒太		新規作成					 */
/* ------------------------------------------------------------------------- */
uint16_t dgMotor_Get::RMotorGet(){
	log.LOG(LOG_ID_MOTOR,"MotorGetOk\r\n");
	return i_rmotor_info;						/* 色情報を戻す				 */
}
uint16_t dgMotor_Get::LMotorGet(){
	log.LOG(LOG_ID_MOTOR,"MotorGetOk\r\n");
	return i_lmotor_info;						/* 色情報を戻す				 */
}

/* ------------------------------------------------------------------------- */
/* 関数名	: dgMotor_Get::GetInstance										 */
/* 機能名	: 角位置取得:クラス実体の作成、アドレス渡し						 */
/* 機能概要	: 呼ばれた関数にクラスのアドレスを返却します					 */
/* 引数		: void			: なし											 */
/* 戻り値	: dgMotor_Get&			: obj									 */
/* 作成日	: 2018/07/13		髙岡 諒太		新規作成					 */
/* ------------------------------------------------------------------------- */
dgMotor_Get& dgMotor_Get::GetInstance(void)
{
	static dgMotor_Get obj;				/* クラス実体作成(最初のみ		)	 */
	return obj;							/* クラスアドレス返却				 */
}
/* ------------------------------------------------------------------------- */
/* 関数名	: dgMotor_Get::~dgMotor_Get										 */
/* 機能名	: 角位置取得：デストラクタ										 */
/* 機能概要	: staticクラスの為、コールされることは無い						 */
/* 引数		: void			: なし											 */
/* 戻り値	: void			: なし											 */
/* 作成日	: 2018/07/13		髙岡 諒太		新規作成					 */
/* ------------------------------------------------------------------------- */
dgMotor_Get::~dgMotor_Get()
{
}
// end::main_task[]
/*	-----------------------------------------------------------------------	 */
/*				Copyright HAL College of Technology & Design				 */
/*	-----------------------------------------------------------------------	 */
