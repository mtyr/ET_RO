/*	-----------------------------------------------------------------------	 */
/*	raLine_Threshold_Value.cpp												 */
/*	ラインしきい値更新する関数												 */
/*	-----------------------------------------------------------------------	 */
/*	番号	更新履歴									日付		氏名	 */
/*	-----------------------------------------------------------------------	 */
/*	000000	新規作成								2018/06/29	松浦 侑矢	 */
/*	000001	仕様変更								2018/07/10	松浦 侑矢	 */
/*	000002	コード修正								2018/07/12	松浦 侑矢	 */
/*	-----------------------------------------------------------------------	 */

/*	-----------------------------------------------------------------------	 */
/*	includeファイル															 */
/*	-----------------------------------------------------------------------	 */
#include "raLine_Threshold_Value.h"
#include "..\dgColor_Get\dgColor_Get.h"
#include "..\frLog\frLog.h"
#include <math.h>/* Local追加 */


/* ------------------------------------------------------------------------- */
/* 関数名	: raLine_Threshold_Value::raLine_Threshold_Value				 */
/* 機能名	: しきい値取得：コンストラクタ									 */
/* 機能概要	: 初回インスタンス生成時にコールされます						 */
/* 引数		: void			: なし											 */
/* 戻り値	: void			: なし											 */
/* 作成日	: 2018/07/9			松浦 侑矢		新規作成					 */
/* ------------------------------------------------------------------------- */
raLine_Threshold_Value::raLine_Threshold_Value()
{
	 PIDCal.Reset();
}
/* ------------------------------------------------------------------------- */
/* ■■■ public ■■■														 */
/* ------------------------------------------------------------------------- */

/* ------------------------------------------------------------------------- */
/* 関数名	: raLine_Threshold_Value::raLineSet								 */
/* 機能名	: 現在カラー値返答												 */
/* 機能概要	: 現在カラー値を返す											 */
/* 引数		: void					:なし									 */
/* 戻り値	: SINT: FUNC_ERR		:関数異常終了							 */
/* 作成日	: 2018/07/10	松浦 侑矢		新規作成						 */
/* ------------------------------------------------------------------------- */
SINT raLine_Threshold_Value::raLineSet(void)
{
	/*	クラス宣言	*/
	//frLog &log = frLog::GetInstance();/*	ログクラス	*/
	
	/* 現在カラー値の更新													 */
	i_current_color = raLineGet(i_current_color);
	//log.LOG(LOG_ID_ERR,"currnt=%d\r\n",i_current_color);
	
	Turning=raLinePID(i_current_color, i_gray);
	//log.LOG(LOG_ID_ERR,"Turning=%f\r\n",Turning);
	
	return Turning;
}

/* ------------------------------------------------------------------------- */
/* 関数名	: raLine_Threshold_Value::raLineUP								 */
/* 機能名	:																 */
/* 機能概要	:																 */
/* 引数		: void					:なし									 */
/* 戻り値	: SINT: FUNC_ERR		:関数異常終了							 */
/* 作成日	: 2018/07/10	松浦 侑矢		新規作成						 */
/* ------------------------------------------------------------------------- */
SINT raLine_Threshold_Value::raLineUP(SINT gray)
{
	i_gray  = gray;

	return FUNC_OK;
}
/* ------------------------------------------------------------------------- */
/* ■■■ private ■■■													 */
/* ------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------- */
/* 関数名	: raLine_Threshold_Value::raLinePID							     */
/* 機能名	: ラインしきい値：現在カラー値の更新							 */
/* 機能概要	: 現在カラー値の更新											 */
/* 引数		: SINT: i_current_color,i_gray		:現在カラー値,灰色	 		 */
/* 戻り値	: math_limit(P + I + D, -100.0,100.0);	:旋回値					 */
/* 作成日	: 2018/07/10 	松浦 侑矢		新規作成						 */
/* ------------------------------------------------------------------------- */
FLOT raLine_Threshold_Value::raLinePID(SINT i_current_color,SINT i_gray){

	/* ログクラスのGetInstance */
	//frLog &log = frLog::GetInstance();
	
	PIDCal.Reset();

	PIDCal.SetTarget( (float) i_gray );
	PIDCal.SetPID(KP, KI, KD, 60);
	
	//log.LOG(LOG_ID_LINETRACE,"nowColor=%d\r\n",i_current_color);
	  PID =PIDCal.Get( (float)  i_current_color );
			//PID値を-100~100にクランプして出力
    return (MathHelper::Clamp(PID, -1.0f, 1.0f) * 100);
	
}

/* ------------------------------------------------------------------------- */
/* 関数名	: raLine_Threshold_Value::raLineGet							     */
/* 機能名	: ラインしきい値：現在カラー値の更新							 */
/* 機能概要	: 現在カラー値の更新											 */
/* 引数		: SINT: i_current_color		:現在カラー値更新前					 */
/* 戻り値	: SINT: i_current_color		:現在カラー値更新後					 */
/* 作成日	: 2018/07/10 	松浦 侑矢		新規作成						 */
/* ------------------------------------------------------------------------- */
SINT raLine_Threshold_Value::raLineGet(SINT i_current_color){
	/* カラー情報取得クラス生成 											 */
	dgColor_Get &dgColor = dgColor_Get::GetInstance(); 
	dgColor.ColorUpdate();
	/* ラインしきい値取得からしきい値を取得									 */
	i_current_color = dgColor.ColorGet();

	return i_current_color;
}
//UPでライントレースに値を渡す。

/* ------------------------------------------------------------------------- */
/* 関数名	: raLine_Threshold_Value::GetInstance							 */
/* 機能名	: カラー取得:クラス実体の作成、アドレス渡し						 */
/* 機能概要	: 呼ばれた関数にクラスのアドレスを返却します					 */
/* 引数		: void			: なし											 */
/* 戻り値	: raLine_Threshold_Value&			: obj						 */
/* 作成日	: 2018/07/2		松浦 侑矢 		新規作成						 */
/* ------------------------------------------------------------------------- */
raLine_Threshold_Value& raLine_Threshold_Value::GetInstance(void)
{
	static raLine_Threshold_Value obj;			/* クラス実体作成(最初のみ)	 */
	return obj;									/* クラスアドレス返却		 */
}
/* ------------------------------------------------------------------------- */
/* 関数名	: raLine_Threshold_Value::~raLine_Threshold_Value			   	 */
/* 機能名	: しきい値取得：デストラクタ									 */
/* 機能概要	: staticクラスの為、コールされることは無い						 */
/* 引数		: void			: なし											 */
/* 戻り値	: void			: なし											 */
/* 作成日	: 2018/07/9		松浦 侑矢		新規作成						 */
/* ------------------------------------------------------------------------- */
raLine_Threshold_Value::~raLine_Threshold_Value()
{
}

/*	-----------------------------------------------------------------------	 */
/*				Copyright HAL College of Technology & Design				 */
/*	-----------------------------------------------------------------------	 */
